# prettier-ignore
openapi: 3.0.9
info:
  title: API for project 3d-inventory
  description: Run CRUD od 3d-inventory data model.
  version: 1.0.3
servers:
  - url: 'http://localhost:8080'
    description: 3d-inventory-oracle-api
paths:
  /device/{deviceId}:
    parameters:
    - name: deviceId
      in: path
      required: true
      description: Parameter deviceId is string uuid
      schema:
        type : string
    get:
      summary:
        Get Device Id
      description:
        Get information about devices.

      operationId: deviceGET
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
              examples:
                device_id:
                  value: tall_turquoise_sheep
      x-swagger-router-controller: Default

    put:
      summary: "Insert new device"
      description: Create device.
      parameters:
        - name: deviceId
          in: path
          required: true
          description: Parameter deviceId is string uuid
          schema:
            type : string
      operationId: devicePUT
      responses:
        '200':
          description: OK

    post:
      summary: Insert new device
      description: Create device.
      parameters:
        - name: deviceId
          in: path
          required: true
          description: Parameter deviceId is string uuid
          schema:
            type : string
      operationId: devicePOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
        required: true
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
              example:
                $ref: '#/components/schemas/Device/example'
        '500':
          description: Error device not created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
              example:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Default

    delete:
      summary: Insert new device
      description: Create device.
      parameters:
        - name: deviceId
          in: path
          required: true
          description: Parameter deviceId is string uuid
          schema:
            type : string
      operationId: deviceDELETE
      responses:
        '200':
          description: OK
      x-swagger-router-controller: Default

  /log/{logId}:
    get:
      summary:
        Get log from database
      description:
        Get all log.
      parameters:
        - name: logId
          in: path
          required: true
          description: Parameter logId is number of log
          schema:
            type : integer
            format: int64
            minimum: 1
      operationId: logGET
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Log'
              examples:
                id:
                  value: '222'
                date:
                  value: '2023-03-12'
                message:
                  value: 'Message in log'
              x-swagger-router-controller: Default
        '404':
          description: No found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/404'
              x-swagger-router-controller: Default
        '500':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/5XX'
              x-swagger-router-controller: Default      
              
    put:
      summary:
        Update new log
      description:
        Update log record.
      parameters:
        - name: logId
          in: path
          required: true
          description: Parameter logId is number of log
          schema:
            type : integer
            format: int64
            minimum: 1
      operationId: logPUT
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Log'
              examples:
                id:
                  value: '222'
                date:
                  value: '2023-03-12'
                message:
                  value: 'Message in log'
      x-swagger-router-controller: Default

    post:
      summary:
        Insert new log
      description:
        Create log.
      parameters:
        - name: logId
          in: path
          required: true
          description: Parameter logId is number of log
          schema:
            type : integer
            format: int64
            minimum: 1
      operationId: logPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Log'
        required: true
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Log'
              example:
                $ref: '#/components/schemas/Log/example'
        '500':
          description: Error log not created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/5XX'
              example:
                $ref: '#/components/responses/5XX'
        '404':
          description: Error log not found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/404'
              example:
                $ref: '#/components/responses/404'
      x-swagger-router-controller: Default

    delete:
      summary: Delete log
      description: Delete all or specyfic id log.
      parameters:
        - name: logId
          in: path
          required: true
          description: Parameter logId is number of log
          schema:
            type : integer
            format: int64
            minimum: 1
      operationId: logDELETE
      responses:
        '200':
          description: OK
      x-swagger-router-controller: Default

  /connections:
    get:
      summary: >-
        Server heartbeat operation. Get information about connection between Devices.
      description: >-
        This operation shows how to override the global security defined above,
        as we want to open it up for all users.
      operationId: connectionsGET
      responses:
        '200':
          description: OK
      x-swagger-router-controller: Default

  /attributes:
    get:
      summary: Server heartbeat operation. Get information about devices attributes.
      description: >-
        This operation shows how to override the global security defined above, as we want to open it up for all users.
      operationId: attributesGET
      responses:
        '200':
          description: OK
      x-swagger-router-controller: Default

  /attributes_types:
    get:
      summary: >-
        Server heartbeat operation. Get information about devices attributes types.
      description: >-
        This operation shows how to override the global security defined above, as we want to open it up for all users.
      operationId: attributes_typesGET
      responses:
        '200':
          description: OK
      x-swagger-router-controller: Default

components:

  schemas:
  
    Device:
      required:
        - device_id
        - device_name
      type: object
      properties:
        device_id:
          type: string
        device_name:
          type: string
        device_category:
          type: string
        device_type:
          type: string
      example:
        device_name: device-A1
        device_id: 91601de6-6e93-11ed-a1eb-0242ac120002
        device_type: Server
        device_category: Network

    Error:
      type: object
      properties:
        errNum:
          type: string
        message:
          type: string
        offset:
          type: string
      example:
        errNum: '404'
        message: 'Error example app not work...'
        offset: 'line 10022'

    Log:
      type: object
      required:
        - id
        - date
        - message
      properties:
        id:
          type: string
          description: Incemential log Id
        date:
          type: string
          description: Date as string
        message:
          type: string
          description: Log message
      example:
        id: '102'
        date: '2023-03-12 14:00'
        message: 'Meaasge in log'

  responses:
    '200':
      description: OK
    '400':
      description: Bad request. User ID must be an integer and larger than 0.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '401':
      description: Authorization information is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '404':
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    5XX:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
            
